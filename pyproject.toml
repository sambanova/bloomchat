[build-system]
requires = ["setuptools", "setuptools-scm[toml]"]
build-backend = "setuptools.build_meta"

[project]
# Use "sambanova_" prefix in the package name i.e. the root folder for the source-code
name = "sambanova_bloomchat"
description = "This repo acts as a standard Python template for Python based repositories."
readme = "README.md"
# requires-python = ">=3.10"
license = {file = "LICENSE"}
classifiers = [
    "Programming Language :: Python :: 3",
]
dependencies = [
    "accelerate",
    "deepspeed >= 0.7.3",
    "deepspeed-mii",
    "flask",
    "flask_api",
    "gunicorn",
    "huggingface_hub >= 0.9.0",
    "pydantic",
    "tokenizers",
    "transformers==4.27.0"
]
dynamic = ["version"]

[project.optional-dependencies]
tests = [
    "build",
    "pre-commit >= 2.20",
    "pytest >= 7.1",
    "pytest-html",
    "pytest-cov",
    "sphinx >= 5.2.3",
    "sphinx_rtd_theme"
    ]
dev = [
    "build",
    "twine",
    "setuptools-scm"
    ]

[project.entry-points."timmins.display"]
inference = "inferency.py"

[tool.setuptools.packages.find]
where = ["data_prep", "rdu_quick_start", "tokenization_prep", "training"]

# Enable setuptools_scm for automated versioning
[tool.setuptools_scm]

# Configure Pytest for testing Python code
[tool.pytest.ini_options]
pythonpath = [
    "."
]
minversion = "7.0"
markers = [
    "fast",
    "slow",
]
addopts = """
-ra -q -vv
--durations=50
--html=test_reports/report.html
--junitxml=test_reports/circleci/pytest/junit.xml
--cov=sambanova_ci_research_mvp
--cov-branch
--cov-report term
--cov-report html:test_reports/coverage/pytest_cov.html
--cov-report xml:test_reports/coverage/pytest_cov.xml
"""
testpaths = [
    "tests",
]
filterwarnings = [
    "error",
]
junit_suite_name = "Pytest"
junit_duration_report = "call"

# Configure isort for sorting imports automatically
[tool.isort]
profile = "black"
known_first_party = ["sambanova_*"]

[tool.bandit]
exclude_dirs = [
    "tests",
]

# Configure mypy for type-checking in Python code
[tool.mypy]
warn_return_any = true
warn_unused_configs = true
exclude = [
    "tests",
    "docs",
]
