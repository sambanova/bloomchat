default_install_hook_types: [pre-commit, pre-push]

repos:
- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v2.3.0
  hooks:
    - id: check-added-large-files
    - id: check-toml
    - id: check-yaml
    - id: check-json
    - id: end-of-file-fixer
    - id: trailing-whitespace
- repo: https://github.com/psf/black
  rev: 22.8.0
  hooks:
    - id: black
- repo: https://github.com/PyCQA/flake8
  rev: 5.0.4
  hooks:
    - id: flake8
      additional_dependencies: [flake8-docstrings]
- repo: https://github.com/PyCQA/bandit
  rev: 1.7.4
  hooks:
    - id: bandit
      exclude: ^tests/
- repo: https://github.com/PyCQA/isort
  rev: 5.12.0
  hooks:
    - id: isort
- repo: https://github.com/pre-commit/mirrors-mypy
  rev: "v0.982"
  hooks:
    - id: mypy
      exclude: ^(tests\/.*|docs\/.*)$
- repo: https://github.com/koalaman/shellcheck-precommit
  rev: v0.9.0
  hooks:
    -   id: shellcheck
        args: ["--severity=warning"]  # Optionally only show errors and warnings
- repo: local
  hooks:
  - id: pipenv-lock
    name: Generate pipenv Lock Files for Python Package
    stages: [manual]
    language: system
    entry: bash -c 'source .circleci/VERSIONS &&
            test ${CIRCLECI} = "true" &&
              pipenv lock ||
              docker run
                -e DOCKER_DEFAULT_PLATFORM=${PLATFORM}
                --rm -v ${PWD}:/app -w /app ${DOCKER_IMAGE} bash -c "
                  pip install pipenv==${PIPENV_VERSION} && pipenv lock"'
    files: ^(Pipfile.lock)$
  - id: generate-requirements
    name: Generate requirements files using the Pipfile.lock
    language: system
    entry: bash -c '
      pipenv requirements > requirements/requirements.txt &&
      pipenv requirements --categories=default,build-packages,dev-packages,docs-packages,tests-packages > requirements/all-requirements.txt &&
      pipenv requirements --categories build-packages > requirements/build-requirements.txt &&
      pipenv requirements --categories dev-packages > requirements/dev-requirements.txt &&
      pipenv requirements --categories docs-packages > requirements/docs-requirements.txt &&
      pipenv requirements --categories tests-packages > requirements/tests-requirements.txt'
    files: ^(setup\.cfg|pyproject\.toml|Pipfile.*|requirements.*\.txt)$
  - id: pytest
    name: Run Pytest using pipenv
    stages: [manual]
    language: system
    entry: bash -c 'pipenv run pytest -m fast'
    always_run: true
    pass_filenames: false
